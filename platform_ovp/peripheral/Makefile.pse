#
# This will take all .c files in this directory
# Compile to .o using the PSE compiler
# Create a PSE executable, and copy to the 
# adjacent obj directory, along with any local
# .xml files
#
IMPERAS_HOME := $(shell getpath.exe "$(IMPERAS_HOME)")

ifndef IMPERAS_HOME
  IMPERAS_ERROR := $(error "IMPERAS_HOME not defined")
endif

pse_check := $(wildcard $(IMPERAS_HOME)/lib/$(IMPERAS_ARCH)/CrossCompiler/PSE.makefile.include)
ifeq ($(strip $(pse_check)),) 
   IMPERAS_ERROR := $(error "The PSE compiler is not installed")
endif
include $(IMPERAS_HOME)/lib/$(IMPERAS_ARCH)/CrossCompiler/PSE.makefile.include

include $(IMPERAS_HOME)/ImperasLib/buildutils/Makefile.common

DISABLEOPT = -fno-unit-at-a-time

# Opt or Debug ?
OPT?=1
ifeq ($(OPT),1)
    PSE_CFLAGS += -D_PSE_ -DX86_NEWLIB -Wall -Werror -O2 -I$(PWD)
else
    PSE_CFLAGS += -D_PSE_ -DX86_NEWLIB -Wall -Werror -g -gdwarf-2 -I$(PWD)
endif

all: $(WORKDIR)/pse.pse

# include all the dependancy requirements
ifneq ($(MAKECMDGOALS),clean)
$(foreach dep,$(DEP),$(eval -include $(dep)))
endif

$(WORKDIR)/pse.pse: $(OBJ)
	$(V) echo "Cross Linking Peripheral $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_LINKXX) -o $@ $^ $(CFLAGS) $(PSE_LDFLAGS) $(LDFLAGS) $(DISABLEOPT)  
ifeq ($(COPYXML),1)
	$(V) echo "Copying XML $(XML) to $(@D)"
	$(V) cp $(XML) $(@D)
endif

$(OBJDIR)/%.d: %
	$(V) echo "Cross Depending Peripheral $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_CC) -MM $^ $(CFLAGS) $(DISABLEOPT) -MT $(OBJDIR)/$*.o -MF $@

$(OBJDIR)/%.S: %
	$(V) echo "Cross Depending Peripheral $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_CC) -MM $^ $(CFLAGS) $(DISABLEOPT) -MT $(OBJDIR)/$*.o -MF $@ 

$(OBJDIR)/%.o: %.c
	$(V) echo "Cross Compiling Peripheral $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_CC) -g -gdwarf-2 -c -o $@ $< $(CFLAGS) $(DISABLEOPT) 

$(OBJDIR)/dmacModel.stubs.o: dmacModel.stubs.c
	$(V) echo "Cross Compiling Peripheralc Stubs $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_CC) -g -gdwarf-2 -c -o $@ $< $(CFLAGS) $(DISABLEOPT) --include $

$(OBJDIR)/%.o: %.c++
	$(V) echo "Cross Compiling Peripheral $@"
	$(V) mkdir -p $(@D)
	$(V) $(PSE_CXX) -g -gdwarf-2 -c -o $@ $< $(CFLAGS) $(DISABLEOPT)  

clean::
	$(V) - rm -f $(WORKDIR)/pse.pse
	$(V) - rm -rf $(OBJDIR)
	
